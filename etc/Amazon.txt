Amazon

map-reduce

프로그램 작성하기 전에
좀 생각하고 하자. 자료구조는 어떻게 할 것인지, 자료구조가
링크트리스트 같이 수정이 가능한 것이면 어떻게 되는지.. 항상 질문을 하자. 어떻게 질문할 지에 대해서도 미리 생각해 보자.
어떤 restriction이나 acceptance criteria가 있는지, 어떤 api가 있는지, 추가/삭제가 빈번한 것인지 등.

어떤 아이디어인지 말을 하자. 그냥 넘어가지 말고.


특히, 잘 모를 경우에 인터뷰어에게 게속 물어보도록 하고,
또한 말로만 설명하지 말고 간단한 스도코드라도 작성하자.

그렇지 않으면 프로그램을 작성하는건지 아닌지 모를 수 도 있다.

그리고, 일단 간단하게 자료구조를 선언한 다음에는 인터페이스 구현을 하는 것이 순서일 것이므로, 자료구조 선언할 때 어떻게 할 지 대충 생각해 보도록 하자.  

그리고, 다음에는 꼭, map-reduce라는 것을 말로 하자. 괜히 모르고 있는것 처럼 속일 필요가 없다. 그냥 말하면 된다.

그리고 계속 수정을 요구하는 사람도 있을 것이므로, 그런 경우도 있음을 생각하자. 그러니까 처음에 좀 더 생각하고 시작해야 한다.

간단한 자료구조는 하나 기억하고있자. 특히 링크트리스트 이용한 것.

문제: 
단어가 나왔을때 단어 count 하기. map을 사용할 때 complexity. redundancy 제거 하는 방법 (string의 경우 resize해야). hash. vs. map. map을 사용하지 않을 경우 어떻게 간단하게 계산할 수 있나? 수백만개일때에는 어떻게? bloom filter 사용
교차로에서 신호등이 계속 연결되어 있는 것을 어떻게 모델링 할 수 있을까? 그래프 이용
특정한 ip에서 서버에 접근을 하는 것이 너무 많은 경우, 즉 헤킹 하는 경우와 같을 때 이것을 어떻게 처리할 수 있을까? server에 접근할 경우  map<string, int> 이용해서 ip count함.  그런데 일정 시간이 지나면  count를 clear해야함 (일정 시간 동안 max 갯수만큼 hit하면 문제임). 그런데 서버가 한개가 아니라 1000개 일경우 각각 이것들을 count 수행함. 그리고 일정 시간이 지나면  map reduce를 통해서 전체 서버들에서의 결과를 summary. 어떤 architecture 를 가져야 하나? 어떻게 프로그램을 만들 수 있을까? 그냥 말로만 하는 것이 아니라 프로그램을 만들어야 한다.
set을 만드는데, set의lookup시 그리고 추가/삭제시 시간을최소화 함. 어떻게 할까? map으로 element들을 다 가지고 있고, 또한 linked list로 element들을 가지고 있음. (결국, 인덱스를 이용해야 빠른 접근이 가능하고, 추가/삭제가 가능하려면 링크트 리스트를 사용해야함). So, some kind of B tree? we have a linked-list, and fast search to the element?
어떤 data structure를 사용할 지에 대해서 의견을 나누어야 함. 추가/삭제가 빈번한 것인지 아닌지 등 (빈번한 경우에는 vector 보다는 linked list)
그리고,  그 경우에 linked list등을 만들때 list<>를 사용하는 것이 좋을지 아니면 따로 linked list를 만들어야 할 지도 생각해 볼 것(왜냐하면, 이미 주어진 linst<>를 사용할 경우 우리가 그 element에 대해서 마음대로 지우거나 접근하거나 할 수 없음.)


