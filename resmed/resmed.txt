
CAM TEAM

./bin/Hub.exe -FG Serial:COM4,57000,n,8,1 -basePort 12340

HAT does not need to use baseport in Hub.exe
When using HAT, check port number and URL, and other related stuff

To run hat integ test, 
in HwTest, open 2 terminal and 
>./hat_integ_test
>./run.py -t xxx . -- --with-sim (where xxx is the tag name of the scenario)


to run a feature file, find a tag that is global to that feature file and run with
that tag. probably it would be the Jira card name

./bin/CommRelay.exe -A File: i wrk/debug_purge/Build/RxDebug/Cam.ufb -B Client: localhost 12346

>svn co  https://subversionau/svnpd/DataConnectivity/main
> svn diff -c revision == git show

> in the channel 7, enter 'TAIL[enter' shows last debug message

> commit comment example for automatic update to review:
 NDC-173: Implemented new integ test. +review CR-NDC-135

> upgrade file
 scons target=rx upgrade-file

> how to run a scenario from the integtest
ex: Too	./run.py -t STR-Scenario1 .

> unittest case name
 They must be: <class><method><Situation><expectation> 
 eg:
 HttpStream_Put_NullStringResultsInNoAction
 HttpStream_Put_NegativeLenResultsInNoAction
						

Phantom_logging.cfg: change the level of logger_data_module to DEBUG to see more detail information.

Server namel: AU3RDCMOD01
Server URL and Port is 203.15.64.66:31621 (port number may change)


how to run fgsim? 
./fgsim  ../../IntegTests/fg_data/default

how to run ecpsh on fgsim?

1. run fgsim (port A)
2. run ecpsh with some port (port B)
3. commreplay with A and B (both client)
ex:  ./bin/CommRelay.exe -A Client: localhost 5770 -B Client: localhost 1111

pyhton debug: add --no-capture at the end. 

-----------
S10 model
http://confluence.corp.resmed.org/download/attachments/6521655/S10+Models.txt
------------

manufacturing setup

URL=203.15.64.66
PORT=31623
APN=internet.gdsp

ex) how to do commrelay?

 ./CommRelay.exe -A Serial: COM6,57600,n,8,1 -B Serial: COM5,57600,n,8,1

head up for commrelay: server does not have 'locahost, but client has



xhash error? AUTH
after setup FG serial number, you should reboot FG


eLB: how to create new one?

 - go to the parent directory for the eLB
 - find a template
 - duplicate
 - edit
 - exit and release

how to use ssh to redirecting connection?

>> ssh -R 31635:wres24057:8899 au3rdcmod01

will ssh to au3rdcmod01, and connection to 31635 will be redirected to the wres24057:8899.So that you can make your own web browser on wres24057.


you can use this ssh redirecting connection to just use a port for both HAT and Apache.
As port open for public may be running out, we need to share public port for Apachea and HAT




# svn checkout to a specific revision

svn up -rXXXX

resetprg.c:PowerON_Reset_PC()

stuck at healthy check? set APN
xhash error? AUTH
after setup FG serial number, you should reboot FG


eLB: how to create new one?

- go to the parent directory for the eLB
- find a template
- duplicate
- edit
- exit and release

how to test single python unit test (without running them all)?
py.test -v test_bridgesim.py -k 'test_fg_disconnected_cam_can_receive_reply_from_bridge' -s

you should specify 'test_name'


some important serf files:

modemcontrol.c
serfmodem.cpp
serfpower.c
modemcoms.c
seqrsphandler.c


Newport Data Connectivity â€¦  Manufacturing Support
Python to executables
Created by Jung Gyu Park, last modified on 08 May, 2014 Go to start of metadata
- For your Windows system, install Windows version of Python (32 bit)
- Install necessary python packages (i.e., serial).
- Make sure your python program can run on the Windows Python
- Install python-to-executable. We can use cx_freeze (http://cx-freeze.sourceforge.net/)
- Run script to build executables (cxfreeze-quickstart. Check scripts directory under python installationdirectory). It will ask python file name and exe file name.
It will generate .exe file and .dll files. If you find some python packages are missing, then you should copy the missing python packages to the working directory.
- Run the .exe file.










Software release

1. tell than I will cut so do not check in
2. checkout mainline
3. step_all
4. in the explorer, select the folder, right click mouse, 
   then TortoiseSVN, select Branch / Tag, 
   select a directory to make a branch
   (make sure that externals are all not checked)
5. checkout the branch that I created just before
   change source code version, and step_all.

   ** MEMO CRC, SIZE, ETC ***
6. Checkout booloader branch if needed (if we do not release
   bootloader, but is going to use previously released one)
  
6.1 run 'scons target=rx no-app-image=true'
6.2 copy Cam.bin from 5 to Build/RxDebug/
6.3 scons target=rx
    will give you combined .mot file having both bootloader and application
6.4 copy that mot file to the Build/RxDebug of the release folder
7. commit source code change (version related) and binary file (including mot).
   The commit comment should starts with Jira card number for this release.
7.1 add binary for the Hat Upgrade as well.
7.2 change HwTest/config.py old nad new version.
8. svn up to check whether it is fine
9. step_all --midnight
10. copy the result and put it in the Jira card as a comment

   

FG TEAM


Test/Script/RunTest has some file to refer (i.e., UnitEnv.py, BddEnv.py)

bddtest:
/Test/Scenarios/fgtest.py [-s scenarioname]

unittest:
/Test/Unit/SuperUnit/Win32
scons -u
and then run exe file


power cycle test farm machine:
Inthe remote desktop, press Alt-4 (or Alt-F4), select restart.
 Or open windows cmd, and then enter the following command:
shutdown /r /t 0


how to change external revision:
Windows explorer, from main fg application folder, go to extermal
select toroise svn
select properties
select externals double click
change properties and press ok
commit the change


how to change CAN bus in testing (from ixxx to gridconnect)?
$ svn diff
Index: Test/Scripts/SteehlTest/SteehlDatagramDemo.py
===================================================================
--- Test/Scripts/SteehlTest/SteehlDatagramDemo.py       (revision 48155)
+++ Test/Scripts/SteehlTest/SteehlDatagramDemo.py       (working copy)
@@ -6,7 +6,7 @@

 import PyFig
 from Comms.CommsThread import CommsThreadManager
-from Comms.Transport import Codec, IxxatCanToUsb
+from Comms.Transport import Codec, IxxatCanToUsb, GridConnectCanToUsb
 import time
 import argparse

@@ -67,7 +67,7 @@
     steehl = Steehl(canCodec)

     # create a thread responsible for sending/receiving data to/from the physical CAN
-    CommsThreadManager(IxxatCanToUsb(), canCodec, args.canId)
+    CommsThreadManager(GridConnectCanToUsb(), canCodec, args.canId)

     greeting = 'Hello FG, I am Steehl.'
     for i in range(10):
